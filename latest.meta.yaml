apiVersion: 1.0.0
metadata:
  name: java-tomcat-2
projects:
  - name: kitchensink-example
    source:
      location: 'https://github.com/jboss-developer/jboss-eap-quickstarts.git'
      branch: 7.4.x
      commitId: 0bdec06d9ce7131b3014745d7267ab788529e2ce
      type: git
      sparseCheckoutDir: kitchensink-jsp
components:
  - id: redhat/java8/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - endpoints:
      - attributes:
          path: /
        name: tomcat
        port: 8080
    memoryLimit: 1024Mi
    type: dockerimage
    alias: tomcat
    image: 'quay.io/lucadepandis_kiratech/jrc-codeready-tomcat:9.0.54'
    mountSources: true
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    env:
      - name: MAVEN_OPTS
        value: '-Xmx200m -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
commands:
  - name: 1. Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/kitchensink-example/kitchensink-jsp'
        type: exec
        command: 'sudo chown -R jboss ${CHE_PROJECTS_ROOT}/kitchensink-example && mvn clean install'
        component: tomcat
  - name: 2. Configure web server
    actions:
      - workdir: /opt/tomcat/bin
        type: exec
        command: './catalina.sh run && echo ''Server was configured'''
        component: tomcat
  - name: 3. Copy war
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/kitchensink-example/kitchensink-jsp'
        type: exec
        command: '/opt/tomcat/bin/catalina.sh stop && cp target/*.war /opt/tomcat/webapps/ROOT.war && /opt/tomcat/bin/catalina.sh start && echo ''Archive was deployed, click on tomcat endpoint from Workspace view to open the application'''
        component: tomcat
  - name: 4. Hot update
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/kitchensink-example/kitchensink-jsp'
        type: exec
        command: mvn clean install && sleep 2 && cp target/*.war /opt/tomcat/webapps/ROOT.war
        component: tomcat
  - name: Debug (Attach)
    actions:
      - referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
          {
              "type": "java",
              "request": "attach",
              "name": "Debug (Attach)",
              "hostName": "localhost",
              "port": 8000
          }
          ]
          }
        type: vscode-launch
